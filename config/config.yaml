# Example configuration file for Destination Intelligence Discovery
# Copy this file to config.yaml and update with your settings

# Destinations to process - Starting from the top of the list
destinations:
  - "Paris, France"
  - "Tokyo, Japan"
  - "New York City, USA"
  - "Santorini, Greece"
  - "Maldives"
  - "Banff, Canada"
  - "Bora Bora, French Polynesia"
  - "Amalfi Coast, Italy"
  - "Kyoto, Japan"
  - "Machu Picchu, Peru"
  - "Reykjavik, Iceland"
  - "Ubud, Bali"
  - "Serengeti, Tanzania"
  - "Queenstown, New Zealand"
  - "Marrakech, Morocco"
  - "Siem Reap, Cambodia"
  - "Lisbon, Portugal"
  - "Edinburgh, Scotland"
  - "Cape Town, South Africa"
  - "Tulum, Mexico"
  - "Goa, India"
  - "Positano, Italy"
  - "Lofoten Islands, Norway"
  - "Whistler, Canada"
  - "Zermatt, Switzerland"
# - "New York City, USA"
# - "Bora Bora, French Polynesia"
# - "Santorini, Greece"
# - "Maldives"
# - "Banff, Canada"
# - "Amalfi Coast, Italy"
# - "Kyoto, Japan"
# - "Machu Picchu, Peru"
# - "Reykjavik, Iceland"
# - "Ubud, Bali"
# - "Serengeti, Tanzania"
# - "Queenstown, New Zealand"
# - "Marrakech, Morocco"
# - "Siem Reap, Cambodia"
# - "Lisbon, Portugal"
# - "Edinburgh, Scotland"
# - "Cape Town, South Africa"
# - "Tulum, Mexico"
# - "Goa, India"
# - "Positano, Italy"
# - "Lofoten Islands, Norway"
# - "Whistler, Canada"
# - "Zermatt, Switzerland"

# =============================================================================
# PROCESSING MODE CONTROL - FULL COMPREHENSIVE PROCESSING
# =============================================================================

processing_mode:
  # Master toggles for different processing types - ENABLE ALL THREE
  enable_theme_processing: true       # ENABLE theme discovery/generation
  enable_nuance_processing: true      # ENABLE nuance processing
  enable_seasonal_images: true        # ENABLE seasonal image generation via DALL-E 3
  preserve_existing_nuances: false    # Allow fresh nuance generation
  
  # Fine-grained theme controls
  theme_controls:
    skip_theme_discovery: false       # RUN web discovery for themes  
    skip_theme_enhancement: false     # RUN intelligence enhancement for themes
    skip_theme_evidence: false        # COLLECT new theme evidence
    preserve_theme_files: false       # Allow overwriting of theme JSON files
    preserve_theme_evidence: false    # Allow overwriting of theme evidence files
    dashboard_show_themes: true       # Dashboard should display theme data
    force_theme_regeneration: false   # Use incremental processing for themes
    theme_only_mode: false            # DISABLE theme-only mode (enable full processing)
    
  # Nuance-specific controls  
  nuance_controls:
    force_nuance_regeneration: false  # Use incremental processing for nuances
    nuance_only_mode: false           # DISABLE nuance-only mode (enable full processing)
    clean_nuance_files: false         # Preserve existing nuance files for incremental processing
    clean_nuance_evidence: false      # Preserve existing nuance evidence for incremental processing
    preserve_nuance_files: false      # Allow updating nuance JSON files
    preserve_nuance_evidence: false   # Allow updating nuance evidence files
    
  # Cleanup behavior controls
  cleanup_controls:
    preserve_all_nuance_sessions: false   # Allow nuance updates across sessions
    clean_theme_all_sessions: false       # Allow theme updates across sessions
    patterns_to_preserve: []              # No specific preservation patterns (full processing)
    patterns_to_clean: []                 # No specific cleanup patterns (incremental processing)
      
  # Debug information
  debug_info:
    reason: "Full comprehensive processing - themes, nuances, and seasonal images"
    themes_status: "Full processing with incremental updates"
    nuances_status: "Full processing with incremental updates"
    images_status: "ENABLED - DALL-E 3 seasonal image generation"

# Database configuration
database:
  path: "enhanced_destination_intelligence.db"
  type: "sqlite"
  chroma_db_path: "./chroma_db"

# Server configuration
server:
  default_port: 8000
  host: "localhost"
  auto_port_detection: true
  max_port_attempts: 10
  open_browser_by_default: true

# LLM settings (can be overridden by .env)
llm_settings:
  provider: "gemini"  # Use Gemini instead of OpenAI
  gemini_model_name: "gemini-1.5-flash-latest"  # or gemini-2.0-flash
  openai_model_name: "gpt-4o-mini"
  anthropic_model_name: "claude-3-5-sonnet-latest"

# The enhanced prompt for generating destination affinities with nuances
affinity_prompt: |
  Generate comprehensive destination affinities for {destination} following this exact JSON schema. Include destination personality, traveler-specific nuances, and actionable details. Do not include any text before or after the JSON object.

  {{
    "destination_id": "str",
    "destination_personality": {{
      "primary_character": "str (e.g., 'luxury paradise', 'cultural melting pot', 'outdoor adventure hub')",
      "defining_features": ["str (2-4 key characteristics)"],
      "ideal_trip_length": "str (e.g., '3-5 days', '1-2 weeks')",
      "best_known_for": ["str (3-5 signature experiences)"]
    }},
    "affinities": [
      {{
        "category": "enum[nature|culture|adventure|luxury|family|wellness|food|nightlife|shopping|business]",
        "theme": "str (max 3 words)",
        "sub_themes": ["str"],
        "confidence": "float(0-1)",
        
        "traveler_nuances": {{
          "solo": {{
            "appeal_factors": ["str (why good for solo travelers)"],
            "specific_recommendations": ["str (solo-specific advice)"],
            "safety_considerations": ["str (solo travel safety tips)"]
          }},
          "couple": {{
            "romantic_elements": ["str (romantic aspects)"],
            "couple_activities": ["str (activities for two)"],
            "intimate_venues": ["str (romantic locations)"]
          }},
          "family": {{
            "kid_friendly_features": ["str (family amenities)"],
            "age_group_suitability": ["str (best for which ages)"],
            "family_logistics": ["str (practical family tips)"]
          }},
          "group": {{
            "group_dynamics": ["str (good for groups because...)"],
            "group_activities": ["str (activities for groups)"],
            "accommodation_tips": ["str (group lodging advice)"]
          }}
        }},
        
        "accommodation_insights": {{
          "recommended_areas": ["str (best neighborhoods/areas)"],
          "accommodation_types": ["str (hotels, resorts, rentals, etc.)"],
          "key_amenities": ["str (important features to look for)"],
          "booking_considerations": ["str (timing, pricing, special factors)"]
        }},
        
        "local_intelligence": {{
          "insider_tips": ["str (local knowledge)"],
          "transportation_notes": ["str (how to get around)"],
          "cultural_etiquette": ["str (local customs to know)"],
          "language_considerations": ["str (language barriers/help)"],
          "currency_payment": ["str (payment methods, tipping)"]
        }},
        
        "temporal_factors": {{
          "seasonality": {{"peak": ["months"], "avoid": ["months"], "shoulder": ["months"]}},
          "best_time_of_day": ["str (optimal timing)"],
          "duration_recommendations": ["str (how long to spend)"],
          "advance_booking": "str (how far ahead to book)"
        }},
        
        "accessibility_inclusion": {{
          "physical_accessibility": "str (wheelchair, mobility considerations)",
          "sensory_considerations": "str (visual, hearing accommodations)",
          "dietary_accommodations": ["str (food restrictions, options)"],
          "budget_accessibility": "str (budget-friendly options)"
        }},
        
        "practical_details": {{
          "price_point": "enum[budget|mid|luxury]",
          "typical_costs": {{
            "budget_range": "str (e.g., '$50-100/day')",
            "mid_range": "str (e.g., '$150-250/day')",
            "luxury_range": "str (e.g., '$300+/day')"
          }},
          "booking_platforms": ["str (best sites/methods to book)"],
          "cancellation_policies": "str (flexibility considerations)"
        }},
        
        "experience_depth": {{
          "surface_level": ["str (easy/obvious experiences)"],
          "deeper_exploration": ["str (more involved experiences)"],
          "local_immersion": ["str (authentic local experiences)"],
          "hidden_gems": ["str (off-the-beaten-path discoveries)"]
        }},
        
        "rationale": "str (comprehensive explanation of why this fits the destination)",
        "unique_selling_points": ["str (what makes this special here)"],
        "potential_drawbacks": ["str (honest limitations or challenges)"]
      }}
    ],
    "destination_logistics": {{
      "getting_there": {{
        "major_airports": ["str (airport codes and names)"],
        "transportation_from_airport": ["str (options to city center)"],
        "alternative_arrival_methods": ["str (train, bus, car, etc.)"]
      }},
      "getting_around": {{
        "public_transport": "str (metro, buses, efficiency)",
        "ride_sharing": "str (Uber/Lyft availability)",
        "walking_walkability": "str (pedestrian-friendly rating)",
        "car_rental": "str (necessity and ease of driving)"
      }},
      "essential_prep": {{
        "visa_requirements": "str (visa needs for US travelers)",
        "health_considerations": ["str (vaccinations, health tips)"],
        "climate_preparation": ["str (what to pack for weather)"],
        "tech_connectivity": "str (wifi, cell service, adapters)"
      }}
    }},
    "meta": {{
      "generated_at": "ISO8601",
      "model_consensus": "float(0-1)",
      "data_richness": "enum[rich|medium|sparse]",
      "specialization_areas": ["str (what this destination excels at)"]
    }}
  }}

  Requirements:
  - Maximum 8-12 affinities, ranked by relevance and uniqueness
  - Each affinity must be actionable for trip planning with specific details
  - Include both mainstream and niche/emerging themes
  - Focus on what makes this destination unique vs. generic travel advice
  - Consider all traveler types with specific nuances for each
  - Include practical logistics and insider knowledge
  - Be honest about limitations alongside selling points
  - Prioritize experiences that are distinctive to this destination

# =============================================================================
# ADAPTIVE INTELLIGENCE CONFIGURATION
# =============================================================================

# Automatic data quality detection heuristics
data_quality_heuristics:
  enabled: true
  
  # Thresholds for detecting data-rich destinations
  rich_data_indicators:
    min_evidence_count: 75        # Sydney had 97, rich destinations have lots of evidence
    min_source_diversity: 4       # Unique domains/sources
    min_high_authority_ratio: 0.3 # % from gov/edu/major travel sites  
    min_content_volume: 15000     # Total characters across sources
    min_theme_discovery_rate: 25  # Themes discovered before filtering
    min_unique_sources: 5         # Minimum unique source domains
  
  # Thresholds for detecting data-poor destinations  
  poor_data_indicators:
    max_evidence_count: 30        # Small towns might only have 15-25 pieces
    max_source_diversity: 2       # Limited source variety
    max_high_authority_ratio: 0.1 # Mostly local/unofficial sources
    max_content_volume: 5000      # Limited total content
    max_theme_discovery_rate: 8   # Few themes discovered
    max_unique_sources: 2         # Very limited sources

# Adaptive export configuration
export_settings:
  # Core adaptive settings
  adaptive_mode: true
  
  # Mode selection based on data quality heuristics
  rich_data_mode: "minimal"           # Clean, focused export for major destinations
  medium_data_mode: "themes_focused"  # Balanced approach for medium data
  poor_data_mode: "comprehensive"     # Capture everything we can find for sparse data
  
  # Adaptive confidence thresholds
  rich_data_confidence: 0.75      # Strict filtering for high-quality data
  medium_data_confidence: 0.55    # Moderate filtering
  poor_data_confidence: 0.35      # Lenient filtering for sparse data
  
  # Evidence limits per theme (adaptive)
  rich_data_max_evidence_per_theme: 3   # Very selective for rich data
  medium_data_max_evidence_per_theme: 5 # Balanced approach
  poor_data_max_evidence_per_theme: 10  # Keep more evidence for sparse data
  
  # Theme limits (adaptive)
  rich_data_max_themes: 12        # Focus on best themes for rich data
  medium_data_max_themes: 15      # Balanced theme count
  poor_data_max_themes: 25        # Keep more themes for sparse data

# =============================================================================
# LEGACY PERFORMANCE SETTINGS (for backward compatibility)
# =============================================================================

performance:
  # LLM Processing optimization
  max_parallel_llm_requests: 5         # Concurrent LLM API calls
  theme_batch_size: 8                   # Themes per batch for processing
  enable_intelligent_batching: true     # Batch themes for efficiency
  enable_llm_response_caching: true     # Cache LLM responses to avoid redundant calls
  
  # Retry configuration
  max_llm_retries: 3                    # Maximum retry attempts for failed LLM calls
  retry_base_delay: 1.0                 # Base delay in seconds for exponential backoff
  retry_max_delay: 30.0                 # Maximum delay in seconds for retries
  
  # Processing optimization
  parallel_processing: true
  max_worker_threads: 4
  chunk_size: 1000
  
  # Memory management
  clear_cache_on_completion: false      # Keep cache for subsequent runs
  limit_memory_usage: true
  max_memory_mb: 2048
  
  # Progress tracking
  enable_progress_bars: true
  show_detailed_progress: true
  progress_update_interval: 1           # Seconds between progress updates

# =============================================================================
# NEW PERFORMANCE OPTIMIZATION SETTINGS
# =============================================================================

performance_optimization:
  # Feature toggles - enable/disable optimizations
  enabled: true
  enable_persistent_cache: true
  enable_connection_pooling: true
  enable_async_database: true
  enable_work_stealing: true
  enable_streaming: true
  enable_performance_monitoring: true

  # LLM Connection Pool Settings
  llm_connection_pool:
    max_connections: 10
    min_connections: 2
    connection_timeout: 30
    max_idle_time: 300
    health_check_interval: 60
    retry_attempts: 3
    retry_delay: 1.0

  # Persistent Cache Settings (Redis)
  persistent_cache:
    redis_host: "localhost"
    redis_port: 6379
    redis_db: 0
    redis_password: null
    default_ttl: 3600  # 1 hour
    max_retries: 3
    retry_delay: 0.1
    enable_compression: true
    fallback_to_memory: true

  # Database Connection Pool
  database_pool:
    max_connections: 20
    min_connections: 5
    connection_timeout: 10
    max_idle_time: 300
    batch_size: 100

  # Work-Stealing Processor
  work_stealing:
    num_workers: null  # Auto-detect based on CPU cores
    queue_size: 1000
    steal_ratio: 0.5
    idle_timeout: 1.0
    load_balance_interval: 5.0

  # Streaming Processor
  streaming:
    chunk_size: 10
    buffer_size: 100
    update_interval: 1.0
    enable_progress_callbacks: true

  # Memory Management
  memory_management:
    enable_memory_monitoring: true
    memory_threshold_mb: 2048
    cleanup_interval: 300
    force_gc_threshold: 0.8

  # Performance Monitoring
  monitoring:
    enable_detailed_profiling: true
    sample_rate: 1.0
    memory_profiling: true
    enable_bottleneck_detection: true
    performance_log_level: "INFO"

# =============================================================================
# WEB DISCOVERY CONFIGURATION
# =============================================================================

web_discovery:
  # Search configuration
  search_engines:
    - "google"
    - "bing"
  
  # Jina Reader configuration
  jina_reader:
    enabled: true
    base_url: "https://r.jina.ai/"
    timeout: 30
    max_retries: 3
    
  # Content extraction settings
  content_extraction:
    min_content_length: 100
    max_content_length: 50000
    extract_metadata: true
    clean_html: true
    
  # Rate limiting
  rate_limiting:
    requests_per_second: 2
    burst_limit: 5
    backoff_factor: 2
    max_backoff: 60

# =============================================================================
# THEME INTELLIGENCE CONFIGURATION  
# =============================================================================

theme_intelligence:
  # Theme discovery settings
  discovery:
    min_confidence_threshold: 0.4
    max_themes_per_destination: 50
    enable_theme_clustering: true
    cluster_similarity_threshold: 0.8
    
  # Theme validation
  validation:
    require_evidence_support: true
    min_evidence_per_theme: 2
    validate_theme_coherence: true
    
  # Theme scoring
  scoring:
    evidence_weight: 0.4
    source_authority_weight: 0.3
    content_quality_weight: 0.2
    uniqueness_weight: 0.1

# =============================================================================
# OUTPUT CONFIGURATION
# =============================================================================

output:
  # File formats
  formats:
    - "json"
    - "html"
    
  # HTML viewer settings
  html_viewer:
    template: "enhanced"
    include_evidence: true
    include_metadata: true
    responsive_design: true
    
  # Export settings
  export:
    include_raw_data: false
    compress_output: true
    backup_previous: true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/destination_intelligence.log"
  max_file_size: "10MB"
  backup_count: 5
  console_output: true

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

development:
  debug_mode: false
  enable_dev_staging: true
  dev_staging_port: 8001
  auto_reload: false
  profiling_enabled: false
  
  # Development staging mode configuration
  staging_mode:
    # Controls how staging works based on development vs production
    auto_detect_mode: true          # Automatically detect dev vs prod mode
    
    # Development mode settings
    dev_mode_indicators:
      limited_destinations: 3       # <= 3 destinations = development mode
      nuance_only_processing: true  # Only nuances enabled = development mode  
      debug_keywords: ["debug", "test", "development"]  # Keywords in config
    
    # Staging behavior per mode
    development_staging:
      selective_staging: true       # Only stage processed destinations
      include_themes_and_nuances: true  # Stage both themes + nuances for processed destinations
      copy_themes_from_previous: true   # Copy existing themes if missing
      focus_dashboard: true         # Generate focused dashboard for development
      
    production_staging:
      selective_staging: false      # Stage all destinations
      include_themes_and_nuances: true  # Stage all available data
      copy_themes_from_previous: false  # Don't copy from previous sessions
      focus_dashboard: false        # Generate full multi-destination dashboard
    
    # Metadata and logging
    log_staging_decisions: true     # Log which staging mode was chosen
    include_mode_in_metadata: true  # Include mode info in staging metadata


# =============================================================================
# AGENT SYSTEM CONFIGURATION
# =============================================================================

agents:
  # Master agent system control
  enabled: true   # Agent system ready for complete library rebuild!
  migration_mode: "agent_only"  # Full multi-agent processing with Citation Enhancement
  
  # Performance comparison and analysis
  enable_comparison: false  # Run both systems in parallel for comparison
  enable_performance_tracking: true
  
  # Orchestrator settings
  orchestrator:
    max_parallel_destinations: 3  # Maximum destinations to process in parallel
    quality_threshold: 0.75  # Minimum quality threshold for acceptance
    max_workflow_retries: 2  # Maximum retries per workflow
    enable_adaptive_thresholds: true  # Dynamically adjust quality thresholds
  
  # Process-specific agent controls
  web_discovery:
    enabled: true  # Enable for citation enhancement testing
    max_sources_per_destination: 12  # Increased for agent intelligence
    timeout_seconds: 45
    enable_content_validation: true
    min_content_quality: 0.6
    min_source_diversity: 0.7
    adaptive_query_generation: true  # Enable intelligent query generation
    enhanced_fallback: true  # Use enhanced fallback strategies
  
  llm_orchestration:
    enabled: true  # Enable for citation enhancement testing
    adaptive_resource_allocation: true  # Intelligent resource allocation
    connection_pool_management: true
    performance_optimization: true
    enable_intelligent_batching: true
    enable_work_stealing: true
    worker_pool_size: 12
    max_concurrent_requests: 8
  
  intelligence_enhancement:
    enabled: true  # Enable for citation enhancement testing
    adaptive_attribute_processing: true  # Context-aware attribute selection
    dependency_aware_processing: true  # Process attributes based on dependencies
    quality_driven_optimization: true  # Optimize based on quality metrics
    enable_attribute_prioritization: true
  
  evidence_validation:
    enabled: true  # Enable for citation enhancement testing
    cross_source_validation: true  # Validate across multiple sources
    conflict_resolution: true  # Resolve conflicting evidence
    authority_scoring: true  # Weight by source authority
    real_time_fact_checking: true
    evidence_sufficiency_threshold: 0.7
  
  quality_assurance:
    enabled: true  # Enable for citation enhancement testing
    continuous_monitoring: true  # Monitor quality throughout pipeline

# =============================================================================  
# SEASONAL IMAGERY CONFIGURATION
# =============================================================================

seasonal_imagery:
  # Feature control
  enabled: true  # ENABLED - Full image generation with DALL-E 3
  
  # DALL-E API settings
  model: "dall-e-3"  # DALL-E model version
  image_size: "1024x1024"  # Image dimensions
  quality: "standard"  # 'standard' or 'hd' for DALL-E 3
  timeout_seconds: 60  # API timeout
  
  # Rate limiting for DALL-E 3 API
  rate_limit_enabled: true  # Enable rate limiting to respect API limits
  rate_limit_images_per_minute: 5  # Conservative Tier 1 limit (5 images/minute)
  # Note: Upgrade to Tier 2+ for higher limits
  # Tier 2: 7 images/minute (requires $50+ spent, 7-day wait)
  # Higher tiers: up to 500 images/minute
  
  # Seasonal prompting
  season_prompts:
    spring: "soft cherry blossoms, pastel light, fresh blooms, gentle morning light"
    summer: "vibrant colors, lively festivals, sunny skies, bright daylight" 
    autumn: "golden leaves, warm evening glow, harvest colors, amber light"
    winter: "snow-covered streets, twinkling lights, cozy atmosphere, crisp air"
  
  # Prompt template for image generation  
  prompt_template: "High-resolution professional travel photography of {destination} in {season}, {details}. Stunning composition, vibrant colors, iconic landmarks visible, {season} atmosphere."
  
  # Integration settings
  parallel_generation: true  # Generate images in parallel with other processing
  create_collage: false  # Collage generation disabled - only create 4 seasonal images
  store_metadata: true  # Store generation metadata for dashboard
  
  # Error handling
  max_retries: 2  # Retry attempts for failed generations
  fallback_to_web_search: false  # Use web images if DALL-E fails
  graceful_degradation: true  # Continue processing if image generation fails

# Quality assurance configuration (continued)
quality_assurance_extended:
  adaptive_intervention: true  # Automatic quality interventions
  predictive_quality_assessment: true
  enable_early_stopping: true  # Stop processing if quality is sufficient
  intervention_threshold: 0.5  # Trigger intervention below this quality

# Agent performance optimization (extends existing performance_optimization)
agent_performance_optimization:
  # Agent-specific LLM connection management
  agent_llm_connection_pool_size: 8  # Connection pool size for agents
  
  # Agent parallel processing
  agent_max_concurrent_web_requests: 6  # Web discovery concurrency for agents
  agent_theme_batch_size: 8
  
  # Agent work stealing and advanced parallelism
  agent_enable_work_stealing: true
  agent_worker_pool_size: 12
  agent_work_steal_threshold: 2
  agent_max_steal_attempts: 3
  
  # Agent streaming and progressive results
  agent_enable_streaming_results: false  # Enable for real-time progress updates
  agent_progressive_feedback_interval: 2.0
  agent_max_streaming_chunk_size: 1048576  # 1MB
  
  # Agent resource management
  agent_max_llm_retries: 3
  agent_retry_base_delay: 1.0
  agent_retry_max_delay: 30.0

# Migration settings for agent system
agent_migration:
  # Rollback configuration
  enable_automatic_rollback: true
  rollback_on_quality_degradation: true
  quality_degradation_threshold: 0.1  # 10% quality drop triggers rollback
  
  # Gradual migration
  migration_percentage: 100  # Percentage of requests to route to agents
  a_b_testing: false
  control_group_percentage: 0  # Percentage to keep on legacy system
  
  # Comparison and validation
  cross_validation: false  # Run both systems and compare
  cross_validation_sample_rate: 0.1  # 10% of requests for comparison

# =============================================================================
# LLM CITATION ENHANCEMENT CONFIGURATION
# =============================================================================

llm_citation_enhancement:
  # Master toggle for the citation enhancement system
  enabled: true
  
  # Citation extraction settings
  citation_extraction:
    # URL pattern matching settings
    url_patterns:
      - "https?://[\\w\\.-]+\\.\\w+[\\w\\-._~!$&'()*+,;=:@/]*"  # Standard URLs
      - "www\\.[\\w\\.-]+\\.\\w+[\\w\\-._~!$&'()*+,;=:@/]*"     # www.example.com
      - "[\\w\\.-]+\\.(?:com|org|net|edu|gov|mil|int|co|uk|ca|de|fr|au|in|jp|br|ru|cn|it|nl|es|se|no|dk|fi|pl|be|ch|at|cz|gr|hu|pt|ie|mx|ar|cl|pe|ve|za|eg|ma|ng|ke|tz|gh|ug|mz|zw|bw|zm|mw|sz|ls|na|ao|cd|cg|ga|cm|cf|td|ne|ml|bf|ci|gn|sl|lr|mr|sn|gm|gw|cv|st|gq|dj|so|er|et|sd|ly|tn|dz|il|jo|lb|sy|iq|ir|af|pk|bd|lk|mv|np|bt|mm|th|kh|la|vn|my|sg|id|ph|tw|hk|mo|kr|kp|mn|kz|kg|tj|tm|uz|ge|am|az|tr|cy|mt|sm|va|ad|mc|li|lu|is|fo|gl|ax|sj|bv|cc|cx|nf|hm|aq|tf|io|um|gu|mp|pr|vi|as|fm|mh|pw|nc|pf|wf|ck|nu|to|tv|nr|ki|sb|vu|fj|pg|ws|tk|tk|pn)(?:/[\\w\\-._~!$&'()*+,;=:@]*)*"  # Domain extensions
    
    # Citation context settings
    extract_surrounding_context: true
    context_window_chars: 200       # Characters before/after URL
    max_citations_per_response: 50  # Limit for processing efficiency
    min_url_length: 10              # Filter out very short URLs
    
    # Quality filters
    exclude_patterns:
      - "localhost"
      - "127.0.0.1"
      - "example.com"
      - "test.com"
      - "placeholder"
      - "dummy"
    
    # Performance settings
    extraction_timeout: 5.0         # Seconds to spend on URL extraction
    parallel_extraction: true       # Extract from multiple LLM responses in parallel
  
  # URL validation settings
  url_validation:
    # Validation strategy
    strategy: "parallel_batch"      # parallel_batch, sequential, or selective
    batch_size: 10                  # URLs to validate in parallel
    max_concurrent_validations: 5   # Maximum concurrent validation requests
    
    # Timeout and retry settings
    request_timeout: 15.0           # Seconds per URL validation
    max_retries: 2                  # Retry attempts for failed validations
    retry_delay: 1.0                # Seconds between retry attempts
    
    # Validation criteria
    require_200_status: false       # Allow redirects (3xx codes)
    follow_redirects: true          # Follow redirect chains
    max_redirects: 3                # Maximum redirects to follow
    validate_content_type: true     # Check if content-type is reasonable
    min_content_length: 100         # Minimum content length for valid URLs
    
    # Success criteria
    acceptable_status_codes: [200, 201, 202, 301, 302, 303, 307, 308]
    acceptable_content_types:
      - "text/html"
      - "text/plain"
      - "text/markdown"
      - "application/xhtml+xml"
      - "application/xml"
    
    # Performance optimization
    use_head_requests: true         # Use HEAD requests first for speed
    fallback_to_get: true           # Fallback to GET if HEAD fails
    connection_pool_size: 20        # HTTP connection pool size
    
    # Error handling
    ignore_ssl_errors: false        # Strict SSL validation
    user_agent: "Destination-Insights-Discovery/1.0 (Citation-Validator)"
  
  # Citation content mining settings
  content_mining:
    # Mining strategy
    strategy: "adaptive"            # adaptive, fast, or thorough
    
    # Content extraction settings
    use_jina_reader: true           # Prefer Jina Reader for content extraction
    fallback_to_direct: true       # Fallback to direct HTTP if Jina fails
    
    # Content processing
    extract_main_content: true      # Extract main content only
    remove_navigation: true         # Remove navigation elements
    remove_ads: true                # Remove advertisement content
    max_content_length: 10000       # Maximum content length to extract
    min_content_length: 200         # Minimum content length to be useful
    
    # Content quality filters
    content_quality_threshold: 0.6  # Minimum content quality score
    relevance_threshold: 0.5        # Minimum relevance to original theme
    authority_weight: 0.3           # Weight for source authority in scoring
    
    # Performance settings
    mining_timeout: 30.0            # Seconds per content mining operation
    max_concurrent_mining: 3        # Maximum concurrent mining operations
    enable_content_caching: true    # Cache extracted content
    cache_ttl: 3600                 # Cache time-to-live in seconds
  
  # Evidence fusion settings
  evidence_fusion:
    # Fusion strategy
    strategy: "intelligent_merge"   # intelligent_merge, prioritize_discovered, or prioritize_cited
    
    # Quality weighting
    discovered_evidence_weight: 0.6 # Weight for web-discovered evidence
    cited_evidence_weight: 0.4      # Weight for LLM-cited evidence
    
    # Deduplication settings
    enable_deduplication: true      # Remove duplicate evidence
    similarity_threshold: 0.85      # Threshold for considering evidence duplicate
    
    # Evidence limits
    max_evidence_per_theme: 10      # Maximum evidence pieces per theme
    max_cited_evidence_ratio: 0.3   # Maximum ratio of cited to total evidence
    
    # Quality thresholds
    min_fused_quality_score: 0.4    # Minimum quality for fused evidence
    require_source_diversity: true  # Require evidence from diverse sources
    min_source_types: 2             # Minimum different source types
    
    # Authority scoring
    boost_government_sources: 1.2   # Boost multiplier for government sources
    boost_academic_sources: 1.1     # Boost multiplier for academic sources
    boost_official_tourism: 1.3     # Boost multiplier for official tourism sites
    
    # Conflict resolution
    handle_contradictions: true     # Handle contradictory evidence
    contradiction_resolution: "authority_based"  # authority_based, consensus, or latest
  
  # Performance monitoring
  monitoring:
    enable_detailed_metrics: true   # Collect detailed performance metrics
    track_citation_success_rate: true
    track_fusion_quality_impact: true
    log_failed_citations: true
    
    # Alert thresholds
    min_citation_success_rate: 0.7  # Alert if citation success rate drops below this
    max_fusion_processing_time: 60.0  # Alert if fusion takes longer than this
  
  # Feature flags for safe rollout
  feature_flags:
    enable_citation_extraction: true
    enable_url_validation: true
    enable_content_mining: true
    enable_evidence_fusion: true
    enable_fallback_to_discovered_only: true  # Fallback if citation system fails

# =============================================================================
# DESTINATION NUANCE CONFIGURATION
# =============================================================================

destination_nuances:
  # Master toggle for the destination nuance system
  enabled: true
  
  # Target nuance count per destination
  target_nuances_per_destination: 6  # Reduced for testing
  min_nuances_per_destination: 4     # Reduced for testing
  max_nuances_per_destination: 8     # Reduced for testing
  
  # Multi-LLM generation settings - TESTING: Limited models for debugging
  multi_llm_generation:
    # LLM models to use (Reduced for testing reliability)
    models:
      openai:
        - "gpt-4o-mini"  # Only use working model names
      gemini:
        - "gemini-2.0-flash"  # Only use working model names
      anthropic:
        - "claude-3-haiku-20240307"  # Only use working model names
    
    # Generation strategy - TESTING MODE
    use_all_available_models: false   # Use limited models for testing
    require_minimum_models: 1         # Minimum models for testing (reduced)
    parallel_generation: true         # Generate from multiple models simultaneously
    timeout_per_model: 20.0          # Reduced timeout for faster failure detection
    
    # Prompt configuration
    prompt_template: |
      You are an expert travel copywriter. List 8-12 concrete hotel or stay features uniquely associated with {destination}.
      
      Constraints:
      • Each phrase ≤ 4 words
      • Destination-specific, not generic (exclude Wi-Fi, pool, restaurant, breakfast, etc.)
      
      Output: comma-separated phrases only.
    
    # Consensus processing
    consensus_processing:
      similarity_threshold: 0.7       # Threshold for grouping similar phrases
      min_consensus_models: 2         # Minimum models that must agree for high confidence
      phrase_filtering: true          # Filter out generic phrases
  
  # Search validation settings (using Brave Search API)
  search_validation:
    # Validation strategy
    validation_service: "brave"      # "brave" or "google" (brave preferred for free tier)
    parallel_validation: true        # Validate multiple phrases simultaneously
    batch_size: 5                   # Phrases to validate in parallel batch
    
    # Search criteria
    min_search_hits: 1000           # Minimum search results to consider valid
    uniqueness_ratio_threshold: 3.0 # (destination_hits / control_hits) threshold
    control_destination: "Chicago"   # Control destination for uniqueness comparison
    
    # Evidence diversity requirements
    require_evidence_diversity: true
    min_evidence_sources: 2         # Must appear in at least 2 different source types
    accepted_evidence_sources:
      - "wikivoyage"
      - "wikipedia" 
      - "tripadvisor"
      - "lonelyplanet"
      - "official_tourism"
      - "government"
      - "travel_blogs"
    
    # Performance settings
    validation_timeout: 15.0        # Seconds per validation batch
    max_concurrent_validations: 3   # Maximum concurrent validation batches
    cache_search_results: true      # Cache search results for 24 hours
    cache_ttl: 86400               # Cache time-to-live in seconds
  
  # Scoring and ranking settings
  scoring:
    # Scoring formula components
    hit_count_weight: 0.4           # Weight for search hit count (log-scaled)
    uniqueness_weight: 0.4          # Weight for destination uniqueness ratio
    evidence_diversity_weight: 0.2  # Weight for evidence source diversity
    
    # Scoring calculations
    max_log_hit_score: 6.0         # log10(1M hits) = 6, max score normalization
    uniqueness_cap: 10.0           # Cap uniqueness ratio at 10x
    
    # Selection criteria
    min_final_score: 0.3           # Minimum score to include in final results
    score_boost_multipliers:
      government_sources: 1.2       # Boost for government/official sources
      academic_sources: 1.1         # Boost for academic sources
      tourism_authority: 1.3        # Boost for official tourism sources
  
  # Quality assurance
  quality_assurance:
    # Phrase filtering
    deny_list:
      - "wifi"
      - "internet"
      - "breakfast"
      - "parking"
      - "restaurant"
      - "hotel"
      - "room service"
      - "concierge"
      - "fitness center"
      - "business center"
      - "conference room"
      - "meeting room"
      - "laundry"
      - "dry cleaning"
      - "air conditioning"
      - "heating"
      - "television"
      - "phone"
      - "safe"
      - "minibar"
      - "balcony"
      - "view"
      - "bathroom"
      - "shower"
      - "bathtub"
    
    # Generic phrase detection
    generic_phrase_filters:
      - "luxury.*"
      - "modern.*"
      - "comfortable.*"
      - "convenient.*"
      - "beautiful.*"
      - "stunning.*"
      - "amazing.*"
      - "incredible.*"
      - "perfect.*"
      - "ideal.*"
    
    # Quality thresholds
    min_phrase_length: 8           # Minimum characters per phrase
    max_phrase_length: 40          # Maximum characters per phrase
    require_destination_specific: true
  
  # Evidence quality management
  evidence_quality:
    # Minimum evidence requirements  
    min_evidence_per_nuance: 2      # Minimum evidence pieces required per nuance
    target_evidence_per_nuance: 3   # Target evidence pieces per nuance
    max_evidence_per_nuance: 5      # Maximum evidence pieces per nuance
    
    # Evidence validation and deduplication
    enable_evidence_deduplication: true    # Reject duplicate evidence across sessions
    evidence_similarity_threshold: 0.85    # Threshold for considering evidence duplicate
    preserve_existing_evidence: true       # Don't delete existing evidence
    reuse_existing_evidence: true          # Reuse existing evidence when applicable
    
    # Evidence quality scoring
    simple_quality_algorithm: true         # Use simple algorithm without LLM calls
    quality_weights:
      url_validity: 0.4               # Weight for URL accessibility
      domain_authority: 0.3           # Weight for domain authority (travel sites)
      search_rank: 0.3                # Weight for search result ranking
    
    # Evidence rejection policy
    reject_nuance_on_insufficient_evidence: true  # Only reject when threshold not met
    evidence_collection_retries: 2         # Retry evidence collection before rejection
    alternative_search_terms: true         # Try alternative search terms for evidence
  
  # Data lifecycle management
  data_lifecycle:
    preserve_existing_data: true           # Never delete existing themes/nuances
    enable_incremental_updates: true       # Only add new data when needed
    incremental_update_threshold_days: 7   # Only update if data older than this
    enable_data_diff: true                 # Compare existing vs new data
    
  # File organization
  file_organization:
    # Separate files for nuances (matching themes pattern)
    nuances_file: "nuances.json"
    nuances_evidence_file: "nuances_evidence.json"
    
    # Evidence structure
    store_search_metadata: true     # Store search hit counts and scores
    optimize_json_storage: true     # Minify JSON for storage efficiency
    
  # Performance and monitoring
  performance:
    # Timeout settings
    total_processing_timeout: 300.0  # 5 minutes total processing time per destination
    phase_timeouts:
      generation: 120.0             # 2 minutes for multi-LLM generation
      validation: 120.0             # 2 minutes for search validation
      scoring: 60.0                 # 1 minute for scoring and ranking
    
    # Monitoring
    enable_performance_tracking: true
    log_generation_statistics: true
    log_validation_statistics: true
    track_model_performance: true
    
    # Error handling
    graceful_degradation: true      # Continue with partial results if some models fail
    min_working_models: 2           # Minimum models that must work to proceed
    fallback_to_single_model: true  # Fallback to single best model if others fail

# =============================================================================
# SESSION MANAGEMENT AND CONSOLIDATION
# =============================================================================
session_management:
  enable_cross_session_consolidation: true
  consolidation_strategy: "quality_based"  # latest_wins, quality_based, additive
  max_sessions_to_consider: 10
  session_ttl_days: 30
  consolidated_cache_ttl_hours: 24
  
  # Quality thresholds for session data
  min_quality_for_preservation: 0.7
  quality_improvement_threshold: 0.05  # 5% improvement needed to replace

# =============================================================================
# THEME PROCESSING LIFECYCLE
# =============================================================================
theme_processing:
  enable_incremental_updates: true
  merge_strategy: "quality_based"  # append, replace, quality_based
  incremental_update_threshold_days: 7
  min_quality_for_preservation: 0.7
  quality_improvement_threshold: 0.05
  similarity_threshold: 0.85

# =============================================================================
# EXPORT SYSTEM CONFIGURATION
# =============================================================================
export_system:
  enabled: true
  version: "1.0.0"
  schema_version: "2024.1"
  
  # Export formats
  supported_formats: ["json", "structured"]
  default_format: "structured"
  
  # Export organization
  organize_by_destination: true
  include_processing_history: true
  include_schema_metadata: true
  
  # Image handling
  copy_images_to_export: true
  image_formats: ["jpg", "png"]
  create_image_manifest: true
  
  # Quality controls
  min_quality_for_export: 0.6
  require_both_themes_and_nuances: false
  validate_export_integrity: true

# =============================================================================
# ENHANCED CACHING CONFIGURATION
# =============================================================================
enhanced_caching:
  enable_versioned_cache: true
  enable_consolidated_cache: true
  enable_export_cache: true
  
  # Version tracking
  data_versioning: true
  max_versions_per_destination: 5
  version_ttl_days: 14
  
  # Cache invalidation
  auto_invalidate_on_new_data: true
  cache_warming: true
  background_cache_updates: true
 