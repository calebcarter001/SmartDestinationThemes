# Example configuration file for Destination Intelligence Discovery
# Copy this file to config.yaml and update with your settings

# Destinations to process (Top 25 Global Travel Destinations - Complete Library Rebuild)
destinations:
  - "Tokyo, Japan"
  - "Grand Canyon, Arizona, USA"
  - "Reykjavik, Iceland"
  - "Giant's Causeway, Northern Ireland, UK"
  - "Bryce Canyon, Utah, USA"
  - "Antelope Canyon, Arizona, USA"
  - "Reynisfjara Beach, Iceland"
  - "Yosemite National Park, California, USA"
  - "Dead Sea, Jordan"
  - "Ha Long Bay, Vietnam"
  - "Jeita Grotto, Lebanon"
  - "Athens, Greece"
  - "Siem Reap, Cambodia"
  - "Chichen Itza, Mexico"
  - "Machu Picchu, Peru"
  - "Cairo, Egypt"
  - "Stonehenge, England, UK"
  - "Rome, Italy"
  - "Bagan, Myanmar"
  - "Agra, India"
  - "Beijing, China"
  - "London, UK"
  - "Paris, France"
  - "Florence, Italy"
  - "Vienna, Austria"

# Database configuration
database:
  path: "enhanced_destination_intelligence.db"
  type: "sqlite"
  chroma_db_path: "./chroma_db"

# Server configuration
server:
  default_port: 8000
  host: "localhost"
  auto_port_detection: true
  max_port_attempts: 10
  open_browser_by_default: true

# LLM settings (can be overridden by .env)
llm_settings:
  provider: "gemini"  # Use Gemini instead of OpenAI
  gemini_model_name: "gemini-1.5-flash-latest"  # or gemini-2.0-flash
  openai_model_name: "gpt-4o-mini"

# The enhanced prompt for generating destination affinities with nuances
affinity_prompt: |
  Generate comprehensive destination affinities for {destination} following this exact JSON schema. Include destination personality, traveler-specific nuances, and actionable details. Do not include any text before or after the JSON object.

  {{
    "destination_id": "str",
    "destination_personality": {{
      "primary_character": "str (e.g., 'luxury paradise', 'cultural melting pot', 'outdoor adventure hub')",
      "defining_features": ["str (2-4 key characteristics)"],
      "ideal_trip_length": "str (e.g., '3-5 days', '1-2 weeks')",
      "best_known_for": ["str (3-5 signature experiences)"]
    }},
    "affinities": [
      {{
        "category": "enum[nature|culture|adventure|luxury|family|wellness|food|nightlife|shopping|business]",
        "theme": "str (max 3 words)",
        "sub_themes": ["str"],
        "confidence": "float(0-1)",
        
        "traveler_nuances": {{
          "solo": {{
            "appeal_factors": ["str (why good for solo travelers)"],
            "specific_recommendations": ["str (solo-specific advice)"],
            "safety_considerations": ["str (solo travel safety tips)"]
          }},
          "couple": {{
            "romantic_elements": ["str (romantic aspects)"],
            "couple_activities": ["str (activities for two)"],
            "intimate_venues": ["str (romantic locations)"]
          }},
          "family": {{
            "kid_friendly_features": ["str (family amenities)"],
            "age_group_suitability": ["str (best for which ages)"],
            "family_logistics": ["str (practical family tips)"]
          }},
          "group": {{
            "group_dynamics": ["str (good for groups because...)"],
            "group_activities": ["str (activities for groups)"],
            "accommodation_tips": ["str (group lodging advice)"]
          }}
        }},
        
        "accommodation_insights": {{
          "recommended_areas": ["str (best neighborhoods/areas)"],
          "accommodation_types": ["str (hotels, resorts, rentals, etc.)"],
          "key_amenities": ["str (important features to look for)"],
          "booking_considerations": ["str (timing, pricing, special factors)"]
        }},
        
        "local_intelligence": {{
          "insider_tips": ["str (local knowledge)"],
          "transportation_notes": ["str (how to get around)"],
          "cultural_etiquette": ["str (local customs to know)"],
          "language_considerations": ["str (language barriers/help)"],
          "currency_payment": ["str (payment methods, tipping)"]
        }},
        
        "temporal_factors": {{
          "seasonality": {{"peak": ["months"], "avoid": ["months"], "shoulder": ["months"]}},
          "best_time_of_day": ["str (optimal timing)"],
          "duration_recommendations": ["str (how long to spend)"],
          "advance_booking": "str (how far ahead to book)"
        }},
        
        "accessibility_inclusion": {{
          "physical_accessibility": "str (wheelchair, mobility considerations)",
          "sensory_considerations": "str (visual, hearing accommodations)",
          "dietary_accommodations": ["str (food restrictions, options)"],
          "budget_accessibility": "str (budget-friendly options)"
        }},
        
        "practical_details": {{
          "price_point": "enum[budget|mid|luxury]",
          "typical_costs": {{
            "budget_range": "str (e.g., '$50-100/day')",
            "mid_range": "str (e.g., '$150-250/day')",
            "luxury_range": "str (e.g., '$300+/day')"
          }},
          "booking_platforms": ["str (best sites/methods to book)"],
          "cancellation_policies": "str (flexibility considerations)"
        }},
        
        "experience_depth": {{
          "surface_level": ["str (easy/obvious experiences)"],
          "deeper_exploration": ["str (more involved experiences)"],
          "local_immersion": ["str (authentic local experiences)"],
          "hidden_gems": ["str (off-the-beaten-path discoveries)"]
        }},
        
        "rationale": "str (comprehensive explanation of why this fits the destination)",
        "unique_selling_points": ["str (what makes this special here)"],
        "potential_drawbacks": ["str (honest limitations or challenges)"]
      }}
    ],
    "destination_logistics": {{
      "getting_there": {{
        "major_airports": ["str (airport codes and names)"],
        "transportation_from_airport": ["str (options to city center)"],
        "alternative_arrival_methods": ["str (train, bus, car, etc.)"]
      }},
      "getting_around": {{
        "public_transport": "str (metro, buses, efficiency)",
        "ride_sharing": "str (Uber/Lyft availability)",
        "walking_walkability": "str (pedestrian-friendly rating)",
        "car_rental": "str (necessity and ease of driving)"
      }},
      "essential_prep": {{
        "visa_requirements": "str (visa needs for US travelers)",
        "health_considerations": ["str (vaccinations, health tips)"],
        "climate_preparation": ["str (what to pack for weather)"],
        "tech_connectivity": "str (wifi, cell service, adapters)"
      }}
    }},
    "meta": {{
      "generated_at": "ISO8601",
      "model_consensus": "float(0-1)",
      "data_richness": "enum[rich|medium|sparse]",
      "specialization_areas": ["str (what this destination excels at)"]
    }}
  }}

  Requirements:
  - Maximum 8-12 affinities, ranked by relevance and uniqueness
  - Each affinity must be actionable for trip planning with specific details
  - Include both mainstream and niche/emerging themes
  - Focus on what makes this destination unique vs. generic travel advice
  - Consider all traveler types with specific nuances for each
  - Include practical logistics and insider knowledge
  - Be honest about limitations alongside selling points
  - Prioritize experiences that are distinctive to this destination

# =============================================================================
# ADAPTIVE INTELLIGENCE CONFIGURATION
# =============================================================================

# Automatic data quality detection heuristics
data_quality_heuristics:
  enabled: true
  
  # Thresholds for detecting data-rich destinations
  rich_data_indicators:
    min_evidence_count: 75        # Sydney had 97, rich destinations have lots of evidence
    min_source_diversity: 4       # Unique domains/sources
    min_high_authority_ratio: 0.3 # % from gov/edu/major travel sites  
    min_content_volume: 15000     # Total characters across sources
    min_theme_discovery_rate: 25  # Themes discovered before filtering
    min_unique_sources: 5         # Minimum unique source domains
  
  # Thresholds for detecting data-poor destinations  
  poor_data_indicators:
    max_evidence_count: 30        # Small towns might only have 15-25 pieces
    max_source_diversity: 2       # Limited source variety
    max_high_authority_ratio: 0.1 # Mostly local/unofficial sources
    max_content_volume: 5000      # Limited total content
    max_theme_discovery_rate: 8   # Few themes discovered
    max_unique_sources: 2         # Very limited sources

# Adaptive export configuration
export_settings:
  # Core adaptive settings
  adaptive_mode: true
  
  # Mode selection based on data quality heuristics
  rich_data_mode: "minimal"           # Clean, focused export for major destinations
  medium_data_mode: "themes_focused"  # Balanced approach for medium data
  poor_data_mode: "comprehensive"     # Capture everything we can find for sparse data
  
  # Adaptive confidence thresholds
  rich_data_confidence: 0.75      # Strict filtering for high-quality data
  medium_data_confidence: 0.55    # Moderate filtering
  poor_data_confidence: 0.35      # Lenient filtering for sparse data
  
  # Evidence limits per theme (adaptive)
  rich_data_max_evidence_per_theme: 3   # Very selective for rich data
  medium_data_max_evidence_per_theme: 5 # Balanced approach
  poor_data_max_evidence_per_theme: 10  # Keep more evidence for sparse data
  
  # Theme limits (adaptive)
  rich_data_max_themes: 12        # Focus on best themes for rich data
  medium_data_max_themes: 15      # Balanced theme count
  poor_data_max_themes: 25        # Keep more themes for sparse data

# =============================================================================
# LEGACY PERFORMANCE SETTINGS (for backward compatibility)
# =============================================================================

performance:
  # LLM Processing optimization
  max_parallel_llm_requests: 5         # Concurrent LLM API calls
  theme_batch_size: 8                   # Themes per batch for processing
  enable_intelligent_batching: true     # Batch themes for efficiency
  enable_llm_response_caching: true     # Cache LLM responses to avoid redundant calls
  
  # Retry configuration
  max_llm_retries: 3                    # Maximum retry attempts for failed LLM calls
  retry_base_delay: 1.0                 # Base delay in seconds for exponential backoff
  retry_max_delay: 30.0                 # Maximum delay in seconds for retries
  
  # Processing optimization
  parallel_processing: true
  max_worker_threads: 4
  chunk_size: 1000
  
  # Memory management
  clear_cache_on_completion: false      # Keep cache for subsequent runs
  limit_memory_usage: true
  max_memory_mb: 2048
  
  # Progress tracking
  enable_progress_bars: true
  show_detailed_progress: true
  progress_update_interval: 1           # Seconds between progress updates

# =============================================================================
# NEW PERFORMANCE OPTIMIZATION SETTINGS
# =============================================================================

performance_optimization:
  # Feature toggles - enable/disable optimizations
  enabled: true
  enable_persistent_cache: true
  enable_connection_pooling: true
  enable_async_database: true
  enable_work_stealing: true
  enable_streaming: true
  enable_performance_monitoring: true

  # LLM Connection Pool Settings
  llm_connection_pool:
    max_connections: 10
    min_connections: 2
    connection_timeout: 30
    max_idle_time: 300
    health_check_interval: 60
    retry_attempts: 3
    retry_delay: 1.0

  # Persistent Cache Settings (Redis)
  persistent_cache:
    redis_host: "localhost"
    redis_port: 6379
    redis_db: 0
    redis_password: null
    default_ttl: 3600  # 1 hour
    max_retries: 3
    retry_delay: 0.1
    enable_compression: true
    fallback_to_memory: true

  # Database Connection Pool
  database_pool:
    max_connections: 20
    min_connections: 5
    connection_timeout: 10
    max_idle_time: 300
    batch_size: 100

  # Work-Stealing Processor
  work_stealing:
    num_workers: null  # Auto-detect based on CPU cores
    queue_size: 1000
    steal_ratio: 0.5
    idle_timeout: 1.0
    load_balance_interval: 5.0

  # Streaming Processor
  streaming:
    chunk_size: 10
    buffer_size: 100
    update_interval: 1.0
    enable_progress_callbacks: true

  # Memory Management
  memory_management:
    enable_memory_monitoring: true
    memory_threshold_mb: 2048
    cleanup_interval: 300
    force_gc_threshold: 0.8

  # Performance Monitoring
  monitoring:
    enable_detailed_profiling: true
    sample_rate: 1.0
    memory_profiling: true
    enable_bottleneck_detection: true
    performance_log_level: "INFO"

# =============================================================================
# WEB DISCOVERY CONFIGURATION
# =============================================================================

web_discovery:
  # Search configuration
  search_engines:
    - "google"
    - "bing"
  
  # Jina Reader configuration
  jina_reader:
    enabled: true
    base_url: "https://r.jina.ai/"
    timeout: 30
    max_retries: 3
    
  # Content extraction settings
  content_extraction:
    min_content_length: 100
    max_content_length: 50000
    extract_metadata: true
    clean_html: true
    
  # Rate limiting
  rate_limiting:
    requests_per_second: 2
    burst_limit: 5
    backoff_factor: 2
    max_backoff: 60

# =============================================================================
# THEME INTELLIGENCE CONFIGURATION  
# =============================================================================

theme_intelligence:
  # Theme discovery settings
  discovery:
    min_confidence_threshold: 0.4
    max_themes_per_destination: 50
    enable_theme_clustering: true
    cluster_similarity_threshold: 0.8
    
  # Theme validation
  validation:
    require_evidence_support: true
    min_evidence_per_theme: 2
    validate_theme_coherence: true
    
  # Theme scoring
  scoring:
    evidence_weight: 0.4
    source_authority_weight: 0.3
    content_quality_weight: 0.2
    uniqueness_weight: 0.1

# =============================================================================
# OUTPUT CONFIGURATION
# =============================================================================

output:
  # File formats
  formats:
    - "json"
    - "html"
    
  # HTML viewer settings
  html_viewer:
    template: "enhanced"
    include_evidence: true
    include_metadata: true
    responsive_design: true
    
  # Export settings
  export:
    include_raw_data: false
    compress_output: true
    backup_previous: true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/destination_intelligence.log"
  max_file_size: "10MB"
  backup_count: 5
  console_output: true

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

development:
  debug_mode: false
  enable_dev_staging: true
  dev_staging_port: 8001
  auto_reload: false
  profiling_enabled: false


# =============================================================================
# AGENT SYSTEM CONFIGURATION
# =============================================================================

agents:
  # Master agent system control
  enabled: true   # Agent system ready for complete library rebuild!
  migration_mode: "agent_only"  # Full multi-agent processing with Citation Enhancement
  
  # Performance comparison and analysis
  enable_comparison: false  # Run both systems in parallel for comparison
  enable_performance_tracking: true
  
  # Orchestrator settings
  orchestrator:
    max_parallel_destinations: 3  # Maximum destinations to process in parallel
    quality_threshold: 0.75  # Minimum quality threshold for acceptance
    max_workflow_retries: 2  # Maximum retries per workflow
    enable_adaptive_thresholds: true  # Dynamically adjust quality thresholds
  
  # Process-specific agent controls
  web_discovery:
    enabled: true  # Enable for citation enhancement testing
    max_sources_per_destination: 12  # Increased for agent intelligence
    timeout_seconds: 45
    enable_content_validation: true
    min_content_quality: 0.6
    min_source_diversity: 0.7
    adaptive_query_generation: true  # Enable intelligent query generation
    enhanced_fallback: true  # Use enhanced fallback strategies
  
  llm_orchestration:
    enabled: true  # Enable for citation enhancement testing
    adaptive_resource_allocation: true  # Intelligent resource allocation
    connection_pool_management: true
    performance_optimization: true
    enable_intelligent_batching: true
    enable_work_stealing: true
    worker_pool_size: 12
    max_concurrent_requests: 8
  
  intelligence_enhancement:
    enabled: true  # Enable for citation enhancement testing
    adaptive_attribute_processing: true  # Context-aware attribute selection
    dependency_aware_processing: true  # Process attributes based on dependencies
    quality_driven_optimization: true  # Optimize based on quality metrics
    enable_attribute_prioritization: true
  
  evidence_validation:
    enabled: true  # Enable for citation enhancement testing
    cross_source_validation: true  # Validate across multiple sources
    conflict_resolution: true  # Resolve conflicting evidence
    authority_scoring: true  # Weight by source authority
    real_time_fact_checking: true
    evidence_sufficiency_threshold: 0.7
  
  quality_assurance:
    enabled: true  # Enable for citation enhancement testing
    continuous_monitoring: true  # Monitor quality throughout pipeline

# =============================================================================  
# SEASONAL IMAGERY CONFIGURATION
# =============================================================================

seasonal_imagery:
  # Feature control
  enabled: false  # Enable seasonal image generation for destinations
  
  # DALL-E API settings
  model: "dall-e-3"  # DALL-E model version
  image_size: "1024x1024"  # Image dimensions
  quality: "standard"  # 'standard' or 'hd' for DALL-E 3
  timeout_seconds: 60  # API timeout
  
  # Seasonal prompting
  season_prompts:
    spring: "soft cherry blossoms, pastel light, fresh blooms, gentle morning light"
    summer: "vibrant colors, lively festivals, sunny skies, bright daylight" 
    autumn: "golden leaves, warm evening glow, harvest colors, amber light"
    winter: "snow-covered streets, twinkling lights, cozy atmosphere, crisp air"
  
  # Prompt template for image generation  
  prompt_template: "High-resolution professional travel photography of {destination} in {season}, {details}. Stunning composition, vibrant colors, iconic landmarks visible, {season} atmosphere."
  
  # Integration settings
  parallel_generation: true  # Generate images in parallel with other processing
  create_collage: true  # Create seasonal collage from individual images  
  store_metadata: true  # Store generation metadata for dashboard
  
  # Error handling
  max_retries: 2  # Retry attempts for failed generations
  fallback_to_web_search: false  # Use web images if DALL-E fails
  graceful_degradation: true  # Continue processing if image generation fails

# Quality assurance configuration (continued)
quality_assurance_extended:
  adaptive_intervention: true  # Automatic quality interventions
  predictive_quality_assessment: true
  enable_early_stopping: true  # Stop processing if quality is sufficient
  intervention_threshold: 0.5  # Trigger intervention below this quality

# Agent performance optimization (extends existing performance_optimization)
agent_performance_optimization:
  # Agent-specific LLM connection management
  agent_llm_connection_pool_size: 8  # Connection pool size for agents
  
  # Agent parallel processing
  agent_max_concurrent_web_requests: 6  # Web discovery concurrency for agents
  agent_theme_batch_size: 8
  
  # Agent work stealing and advanced parallelism
  agent_enable_work_stealing: true
  agent_worker_pool_size: 12
  agent_work_steal_threshold: 2
  agent_max_steal_attempts: 3
  
  # Agent streaming and progressive results
  agent_enable_streaming_results: false  # Enable for real-time progress updates
  agent_progressive_feedback_interval: 2.0
  agent_max_streaming_chunk_size: 1048576  # 1MB
  
  # Agent resource management
  agent_max_llm_retries: 3
  agent_retry_base_delay: 1.0
  agent_retry_max_delay: 30.0

# Migration settings for agent system
agent_migration:
  # Rollback configuration
  enable_automatic_rollback: true
  rollback_on_quality_degradation: true
  quality_degradation_threshold: 0.1  # 10% quality drop triggers rollback
  
  # Gradual migration
  migration_percentage: 100  # Percentage of requests to route to agents
  a_b_testing: false
  control_group_percentage: 0  # Percentage to keep on legacy system
  
  # Comparison and validation
  cross_validation: false  # Run both systems and compare
  cross_validation_sample_rate: 0.1  # 10% of requests for comparison

# =============================================================================
# LLM CITATION ENHANCEMENT CONFIGURATION
# =============================================================================

llm_citation_enhancement:
  # Master toggle for the citation enhancement system
  enabled: true
  
  # Citation extraction settings
  citation_extraction:
    # URL pattern matching settings
    url_patterns:
      - "https?://[\\w\\.-]+\\.\\w+[\\w\\-._~!$&'()*+,;=:@/]*"  # Standard URLs
      - "www\\.[\\w\\.-]+\\.\\w+[\\w\\-._~!$&'()*+,;=:@/]*"     # www.example.com
      - "[\\w\\.-]+\\.(?:com|org|net|edu|gov|mil|int|co|uk|ca|de|fr|au|in|jp|br|ru|cn|it|nl|es|se|no|dk|fi|pl|be|ch|at|cz|gr|hu|pt|ie|mx|ar|cl|pe|ve|za|eg|ma|ng|ke|tz|gh|ug|mz|zw|bw|zm|mw|sz|ls|na|ao|cd|cg|ga|cm|cf|td|ne|ml|bf|ci|gn|sl|lr|mr|sn|gm|gw|cv|st|gq|dj|so|er|et|sd|ly|tn|dz|il|jo|lb|sy|iq|ir|af|pk|bd|lk|mv|np|bt|mm|th|kh|la|vn|my|sg|id|ph|tw|hk|mo|kr|kp|mn|kz|kg|tj|tm|uz|ge|am|az|tr|cy|mt|sm|va|ad|mc|li|lu|is|fo|gl|ax|sj|bv|cc|cx|nf|hm|aq|tf|io|um|gu|mp|pr|vi|as|fm|mh|pw|nc|pf|wf|ck|nu|to|tv|nr|ki|sb|vu|fj|pg|ws|tk|tk|pn)(?:/[\\w\\-._~!$&'()*+,;=:@]*)*"  # Domain extensions
    
    # Citation context settings
    extract_surrounding_context: true
    context_window_chars: 200       # Characters before/after URL
    max_citations_per_response: 50  # Limit for processing efficiency
    min_url_length: 10              # Filter out very short URLs
    
    # Quality filters
    exclude_patterns:
      - "localhost"
      - "127.0.0.1"
      - "example.com"
      - "test.com"
      - "placeholder"
      - "dummy"
    
    # Performance settings
    extraction_timeout: 5.0         # Seconds to spend on URL extraction
    parallel_extraction: true       # Extract from multiple LLM responses in parallel
  
  # URL validation settings
  url_validation:
    # Validation strategy
    strategy: "parallel_batch"      # parallel_batch, sequential, or selective
    batch_size: 10                  # URLs to validate in parallel
    max_concurrent_validations: 5   # Maximum concurrent validation requests
    
    # Timeout and retry settings
    request_timeout: 15.0           # Seconds per URL validation
    max_retries: 2                  # Retry attempts for failed validations
    retry_delay: 1.0                # Seconds between retry attempts
    
    # Validation criteria
    require_200_status: false       # Allow redirects (3xx codes)
    follow_redirects: true          # Follow redirect chains
    max_redirects: 3                # Maximum redirects to follow
    validate_content_type: true     # Check if content-type is reasonable
    min_content_length: 100         # Minimum content length for valid URLs
    
    # Success criteria
    acceptable_status_codes: [200, 201, 202, 301, 302, 303, 307, 308]
    acceptable_content_types:
      - "text/html"
      - "text/plain"
      - "text/markdown"
      - "application/xhtml+xml"
      - "application/xml"
    
    # Performance optimization
    use_head_requests: true         # Use HEAD requests first for speed
    fallback_to_get: true           # Fallback to GET if HEAD fails
    connection_pool_size: 20        # HTTP connection pool size
    
    # Error handling
    ignore_ssl_errors: false        # Strict SSL validation
    user_agent: "Destination-Insights-Discovery/1.0 (Citation-Validator)"
  
  # Citation content mining settings
  content_mining:
    # Mining strategy
    strategy: "adaptive"            # adaptive, fast, or thorough
    
    # Content extraction settings
    use_jina_reader: true           # Prefer Jina Reader for content extraction
    fallback_to_direct: true       # Fallback to direct HTTP if Jina fails
    
    # Content processing
    extract_main_content: true      # Extract main content only
    remove_navigation: true         # Remove navigation elements
    remove_ads: true                # Remove advertisement content
    max_content_length: 10000       # Maximum content length to extract
    min_content_length: 200         # Minimum content length to be useful
    
    # Content quality filters
    content_quality_threshold: 0.6  # Minimum content quality score
    relevance_threshold: 0.5        # Minimum relevance to original theme
    authority_weight: 0.3           # Weight for source authority in scoring
    
    # Performance settings
    mining_timeout: 30.0            # Seconds per content mining operation
    max_concurrent_mining: 3        # Maximum concurrent mining operations
    enable_content_caching: true    # Cache extracted content
    cache_ttl: 3600                 # Cache time-to-live in seconds
  
  # Evidence fusion settings
  evidence_fusion:
    # Fusion strategy
    strategy: "intelligent_merge"   # intelligent_merge, prioritize_discovered, or prioritize_cited
    
    # Quality weighting
    discovered_evidence_weight: 0.6 # Weight for web-discovered evidence
    cited_evidence_weight: 0.4      # Weight for LLM-cited evidence
    
    # Deduplication settings
    enable_deduplication: true      # Remove duplicate evidence
    similarity_threshold: 0.85      # Threshold for considering evidence duplicate
    
    # Evidence limits
    max_evidence_per_theme: 10      # Maximum evidence pieces per theme
    max_cited_evidence_ratio: 0.3   # Maximum ratio of cited to total evidence
    
    # Quality thresholds
    min_fused_quality_score: 0.4    # Minimum quality for fused evidence
    require_source_diversity: true  # Require evidence from diverse sources
    min_source_types: 2             # Minimum different source types
    
    # Authority scoring
    boost_government_sources: 1.2   # Boost multiplier for government sources
    boost_academic_sources: 1.1     # Boost multiplier for academic sources
    boost_official_tourism: 1.3     # Boost multiplier for official tourism sites
    
    # Conflict resolution
    handle_contradictions: true     # Handle contradictory evidence
    contradiction_resolution: "authority_based"  # authority_based, consensus, or latest
  
  # Performance monitoring
  monitoring:
    enable_detailed_metrics: true   # Collect detailed performance metrics
    track_citation_success_rate: true
    track_fusion_quality_impact: true
    log_failed_citations: true
    
    # Alert thresholds
    min_citation_success_rate: 0.7  # Alert if citation success rate drops below this
    max_fusion_processing_time: 60.0  # Alert if fusion takes longer than this
  
  # Feature flags for safe rollout
  feature_flags:
    enable_citation_extraction: true
    enable_url_validation: true
    enable_content_mining: true
    enable_evidence_fusion: true
    enable_fallback_to_discovered_only: true  # Fallback if citation system fails
 